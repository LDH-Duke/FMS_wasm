@inject IJSRuntime JSRuntime
@inject HttpClient Http
@if (IsShow)
{
    <div class="modal-backgroud">
        <div class="modal-container">
            <div class="modal-wrap">
                <div class="modal-title">
                    제목
                </div>
                <div class="modal-content">
                    <InputText @bind-Value="SearchWord" placeholder="검색어를 입력해주세요." onkeypress="@KeyPress" />
                </div>
                <button class="modal-btn" @onclick="Hide">
                    확인
                </button>
            </div>
        </div>
    </div>
}


@code {
    private string SearchWord { get; set; }

    private bool IsShow { get; set; } = false;

    public void Show()
    {
        IsShow = true;
        StateHasChanged();
    }

    public void Hide()
    {
        IsShow = false;
    }

    private async void KeyPress(KeyboardEventArgs e)
    {
        if(e.Key == "Enter")
        {
            JSRuntime.InvokeAsync<object>("alert", "엔터");

            var response = await Http.PostAsJsonAsync<string>("api/users/search","123");

        }
        
    }

}
