@page "/signup"

@using FMS.Client.Pages.UserSignUp.Components
@using System.Text.Json 
@using FMS.Shared.Model
@using System.Text

@inject NavigationManager Navigation
@inject HttpClient httpClient

<div class="signup-container">
    <div class="signup-wrap">
        <div class="signup-title">
            <sapn>
                Sign Up
            </sapn>
        </div>
        <EditForm Model="@user" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <div class="signup-form">
                <div class="signup-form-inputgroup">
                    <InputField 
                    Label="Id" 
                    InputType="text" 
                    Placeholder="Id" 
                    @bind-Value="@user.Userid" 
                    OnClick="OnDuplicateCheck"
                    />
                    <ValidationMessage For="@(()=>@user.Userid)"/>

                    <InputField 
                    Label="Pw" 
                    InputType="password" 
                    Placeholder="Pw" 
                    @bind-Value="@user.Password" 
                    OnBlur="OnPwCheck" />
                    <ValidationMessage For="@(()=>@user.Password)" />

                    <InputField 
                    Label="Pw Check" 
                    InputType="password" 
                    Placeholder="Pw Check" 
                    @bind-value="CheckPw" 
                    OnBlur="OnPwCheck" />
                    @* <InputField Label="Name" InputType="text" Placeholder="Name" @bind-Value="@user.Name" />
                    <ValidationMessage For="@(()=>@user.N)" />
                    <InputField Label="Email" InputType="text" Placeholder="Email" @bind-Value="@user.Email" />
                    <ValidationMessage For="@(()=>@user.Email)" />
                    <InputField Label="Phone" InputType="text" Placeholder="Phone" @bind-Value="@user.PhoneNumber" />
                    <ValidationMessage For="@(()=>@user.PhoneNumber)" /> *@
                </div>
                <div class="signup-form-btngroup">
                    <button type="submit" class="signup-form-btn btn1">회원가입</button>
                </div>
            </div>
        </EditForm>
    </div>

    @if (is_modal)
    {
        <ErrModal Title="회원가입 Err" Content="@err" OnClose="@OnModalClose" />
    }
</div>


@code {
    private string? CheckPw = null;
    private int is_PwCheck = 2;
    private bool is_modal = false;
    private string err = string.Empty;

    Userinfo user = new Userinfo();

    /*단위 테스트*/
    protected override void OnInitialized(){
        Console.WriteLine("12");
        Console.WriteLine("㎨"=="㎨");
        char myChar ='㎨';
        string myString = "℃";
        byte[] unicodeBytes = Encoding.Unicode.GetBytes(myString.ToString());
        byte[] utf8Bytes = Encoding.UTF8.GetBytes(myString.ToString());

        Console.WriteLine($"UTF-16 바이트 값1: {BitConverter.ToString(unicodeBytes)}");
        Console.WriteLine($"UTF-8 바이트 값: {BitConverter.ToString(utf8Bytes)}");
    }
    
    private void OnModalClose()
    {
        is_modal = false;
        StateHasChanged();
    }
    
    /*
    * 회원가입 Submit
    * --
    */
   
    private async void Submit()
    {
        try
        {
            Console.WriteLine("[회원가입][Submit] 동작");
            Console.WriteLine("ID : " + user.Userid);
            Console.WriteLine("PW : " + user.Password);
            // Console.WriteLine("Name : " + user.Name);
            // Console.WriteLine("Email : " + user.Email);
            // Console.WriteLine("Phone : " + user.PhoneNumber);

            //회원가입 조건
            if(is_PwCheck != 1)
            {
                is_modal = true;
                err = "비밀번호가 일치하지 않습니다.";
                return;
            }

            string json = JsonSerializer.Serialize(user);
            var res = await httpClient.PostAsJsonAsync("http://localhost:5077/api/Users/aa",json);

            Navigation.NavigateTo("/signin");
        }
        catch (Exception err)
        {
            Console.WriteLine("[Sign Up] [Submit] 회원가입 에러 \n" + err);
        }
    }
    
     /*
    * 비밀번호 확인
    * --
    */

   
    private void OnPwCheck()
    {
        try
        {
            if(CheckPw == user.Password)
            {
                is_PwCheck = 1;
                Console.WriteLine("비밀번호 일치");

            }
            else
            {
                is_PwCheck = 0;
                Console.WriteLine("비밀번호 불일치");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("[회원가입][OnPwCheck] \n"+e);
            throw e;
        }
    }
    
    /*
    * 아이디 중복검사
    * --
    */

   
    private async void OnDuplicateCheck()
    {
        try
        {
            var CheckId = new {UserId = user.Userid};
            Console.WriteLine("동작");
            string json = JsonSerializer.Serialize(CheckId);
            var res = await httpClient.PostAsJsonAsync("http://localhost:5077/api/Users/AddUser/aa",json);

        }
        catch(Exception err)
        {
            Console.WriteLine("[회원가입][중복검사] 중복확인 에러! \n" + err);
            
        }
    }
    

}

@* <div class="signin-form-inputs">
    <label class="signin-form-label">ID</label>
    <input class="signin-form-input" type="text" @bind-value="user.Account" placeholder="ID"/>
</div>
<ValidationMessage For="@(()=>user.Account)" /> *@
@* <div class="signin-form-inputs">
    <label class="signin-form-label">PW</label>
    <input class="signin-form-input" type="password" @bind-value="user.Password" placeholder="PW" />
</div>
<div class="signin-form-inputs">
    <label class="signin-form-label">Name</label>
    <input class="signin-form-input" type="text" @bind-value="user.Name" placeholder="Name" />
</div>
<div class="signin-form-inputs">
    <label class="signin-form-label">Email</label>
    <input class="signin-form-input" type="text" @bind-value="user.Email" placeholder="Email" />
</div>
<div class="signin-form-inputs">
    <label class="signin-form-label">Phone</label>
    <input class="signin-form-input" type="text" @bind-value="user.PhoneNumber" placeholder="Phone" />
</div> *@


